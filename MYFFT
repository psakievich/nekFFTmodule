C**********************************************************************
C   VARIABLES USED IN MYFFT ROUTINE
C**********************************************************************
      include "fftw3.f" !lib with FFTW type definitions
C*****COMMON BLOCK FOR INTEGERS****************************************
      ! Variable names and definitions
C----------------------------------------------------------------------
C--------------Start user input for parameters
C---------------------------------------------
    !Number of processors that will use FFT
      integer, parameter::nFFTp2c=2                   
    !Local sampling of field (any FFT dim must span global domain)
      integer, parameter::nFFTlx1=1,nFFTly1=16,nFFTlz1=1
    !Order of FFT (1d,2d,3d)=1,2,3
      integer, parameter::nFFTorder=1
    !Number of fields to perform FFT on
      integer, parameter::nFFTflds=ldim !+ldimt+1
    !Total number of points in the local FFT domain
      integer, parameter::nFFTtotal=nFFTlx1*nFFTly1*nFFTlz1
    !Destroy fftw plan manually (1) or automatically (anything else)
      integer, parameter::nFFTdmanual=1
C---------------------------------------------
C---------------End user input for parameters 
C---------------------------------------------     
    !Physical dimensions to perform FFT
      integer nFFTd2t(nFFTorder)
    !Parameter for error codes in findpnts
      integer nFFTrcode(nFFTtotal)
    !Array for element id's where points exist
      integer nFFTelid(nFFTtotal)
    !Array for which processor the points are stored on
      integer nFFTproc(nFFTtotal)
    !Handle for intpts routines
      integer nFFTitp_handle
    !FFT plan used by FFTW
      integer*8 nFFTplan                     
      
C----------------------------------------------------------------------
C----------User Input Start
C DETERMINE WHICH DIRECTIONS YOU WANT TO TRANFORM HERE:
      data nFFTd2t /1/
C----------User Input End
      
      COMMON /INTMYFFT/ nFFTrcode,nFFTelid,nFFTproc, 
     $ nFFTitp_handle
      COMMON /INT8MYFFT/ nFFTplan 
C----------------------------------------------------------------------

     
C*****COMMON BLOCK FOR REALS*******************************************
      ! Variable names and definitions
C----------------------------------------------------------------------
    !Spatial localtion of points for interpolated values
      real rFFTpts(ldim,nFFTtotal) 
    !Working array for findpnts
      real rFFTwrk(lx1*ly1*lz1*lelt,nFFTflds)
    !Values that are stored from findpnts
      real rFFTvals(nFFTflds,nFFTtotal)
    !Distance away from point
      real rFFTdist(nFFTtotal)
    !Location of point in the local coordinates for the given element
      real rFFTrst(nFFTtotal*ldim)
      
C----------------------------------------------------------------------
      COMMON /REALMYFFT/ rFFTpts, rFFTwrk,rFFTvals, rFFTdist, rFFTrst
C----------------------------------------------------------------------      
      
C*****COMMON BLOCK FOR COMPLEX*****************************************
      ! Variable names and definitions    
C----------------------------------------------------------------------
      double complex cFFTvals(nFFTflds,nFFTtotal)
C----------------------------------------------------------------------
      COMMON /COMPMYFFT/ cFFTvals
C----------------------------------------------------------------------